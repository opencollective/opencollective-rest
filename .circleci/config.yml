version: 2

aliases:
  restore_cache: &restore_cache
    restore_cache:
      name: Restore npm cache
      keys:
        - npm-cache-{{ checksum "package.json" }}
        - npm-cache-

  persist_cache: &persist_cache
    save_cache:
      name: Save npm cache
      key: npm-cache-{{ checksum "package.json" }}
      paths:
        - ../.npm

jobs:
  lint:
    docker:
      - image: cimg/node:14.16.1
    environment:
      NODE_ENV: circleci

    steps:
      - checkout
      - <<: *restore_cache
      - run: npm ci
      - <<: *persist_cache

      - run: npm run lint

  build:
    docker:
      - image: cimg/node:14.16.1
    environment:
      NODE_ENV: circleci

    steps:
      - checkout
      - <<: *restore_cache
      - run: npm ci
      - <<: *persist_cache

      - run: npm run build:clean
      - run: npm run build:updates
      - run: npm run build:server

      - persist_to_workspace:
          root: ..
          paths:
            - project/dist
            - project/scripts
            - project/src
            - project/test
            - project/.babelrc
            - project/package.json
            - project/package-lock.json

  build-api:
    docker:
      - image: cimg/node:14.16.1
      - image: circleci/postgres:9.6.15-alpine-postgis-ram
    environment:
      OC_ENV: ci
      E2E_TEST: 1
    steps:
      - run: sudo apt -y update

      # Used in setup_circleci_db.sh (dropdb ,psql and pg_restore)
      - run: sudo apt -y install postgresql-client

      - checkout

      - run: ./scripts/setup_circleci_checkout_api.sh
      - restore_cache:
          keys:
            - npm-api-cache-{{ checksum "package.json" }}
            - npm-api-cache-

      - run: cd ~/api && npm ci

      - save_cache:
          key: npm-api-cache-{{ checksum "package.json" }}
          paths:
            - ../.npm

      - run: cd ~/api && npm run build

      - run: cd ~/api && npm prune --production

      - persist_to_workspace:
          root: ..
          paths:
            - api/config
            - api/dist
            - api/keys
            - api/migrations
            - api/node_modules
            - api/scripts
            - api/server
            - api/templates
            - api/test
            - api/.babelrc
            - api/package.json
            - api/package-lock.json

  test-server:
    docker:
      - image: cimg/node:14.16.1
      - image: circleci/postgres:9.6.15-alpine-postgis-ram
      - image: circleci/redis
      - image: memcached
    environment:
      NODE_ENV: circleci
    steps:
      - run: sudo apt -y update

      # Used in setup_circleci_db.sh (dropdb, psql and pg_restore)
      - run: sudo apt -y install postgresql-client

      - attach_workspace:
          at: ..

      - <<: *restore_cache
      - run: npm ci

      - run: ./scripts/setup_circleci_db.sh

      - run: npm run test:server

workflows:
  version: 2
  lint-build-test:
    jobs:
      - lint
      - build
      - build-api
      - test-server:
          requires:
            - build
            - build-api
